#######################################################################
# Serial number of GMC500+ version 1.22 (Gift by GQ: 2018):
# getGMC_SERIAL: raw: rec: b'20$v%C\x0c'
# getGMC_SERIAL: decoded:  3230247625430C
#######################################################################

#######################################################################
# Serial number of GMC500+ version 2.24 (AZ Dec 2020):
# getGMC_SERIAL: raw: rec: b'1\x083851\xb4'
# getGMC_SERIAL: decoded:  310833383531B4
#######################################################################


The data from the configuration memory of the 300 and 500/600 series GMC counters
NOTE: 300 devices have 256 bytes memory,
      500/600 devices have 512 bytes

--------------------------------------------------------------------------------

The following list applies only to the 300 series:
CFG data Offset table. Starts from 0
===============================================
PowerOnOff, //to check if the power is turned on/off intended
AlarmOnOff, //1
SpeakerOnOff,
GraphicModeOnOff,
BackLightTimeoutSeconds,
IdleTitleDisplayMode,
AlarmCPMValueHiByte, //6
AlarmCPMValueLoByte,
CalibrationCPMHiByte_0,
CalibrationCPMLoByte_0,
CalibrationuSvUcByte3_0,
CalibrationuSvUcByte2_0, //11
CalibrationuSvUcByte1_0,
CalibrationuSvUcByte0_0,
CalibrationCPMHiByte_1,
CalibrationCPMLoByte_1, //15
CalibrationuSvUcByte3_1,
CalibrationuSvUcByte2_1,
CalibrationuSvUcByte1_1,
CalibrationuSvUcByte0_1,
CalibrationCPMHiByte_2, //20
CalibrationCPMLoByte_2,
CalibrationuSvUcByte3_2,
CalibrationuSvUcByte2_2,
CalibrationuSvUcByte1_2,
CalibrationuSvUcByte0_2, //25
IdleDisplayMode,
AlarmValueuSvByte3,
AlarmValueuSvByte2,
AlarmValueuSvByte1,
AlarmValueuSvByte0, //30
AlarmType,
SaveDataType,
SwivelDisplay,
ZoomByte3,
ZoomByte2, //35
ZoomByte1,
ZoomByte0,
SPI_DataSaveAddress2,
SPI_DataSaveAddress1,
SPI_DataSaveAddress0, //40
SPI_DataReadAddress2,
SPI_DataReadAddress1,
SPI_DataReadAddress0,
PowerSavingMode,
Reserved, //45
Reserved,
Reserved,
DisplayContrast,
MAX_CPM_HIBYTE,
MAX_CPM_LOBYTE, //50
Reserved,
LargeFontMode,
LCDBackLightLevel,
ReverseDisplayMode,
MotionDetect, //55
bBatteryType,
BaudRate,
Reserved,
GraphicDrawingMode,
LEDOnOff,
Reserved,
SaveThresholdValueuSv_m_nCPM_HIBYTE,
SaveThresholdValueuSv_m_nCPM_LOBYTE,
SaveThresholdMode,
SaveThresholdValue3,
SaveThresholdValue2,
SaveThresholdValue1,
SaveThresholdValue0,
Save_DateTimeStamp, //this one uses 6 byte space


-------------------------------------------------------------------------------
The following list applies to the 500/600 series, but not for the latest versions!
(from: http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=4948 )

The GMC-500 and GMC-600 still accept configuration commands same as GMC-320, no
change. But GMC-500 and GMC-600 extended (added new) commands for new features.
Here is the latest configuration data structure in C code on GMC-500 and GMC-600:

typedef enum {
    CFG_PowerOnOff,
    CFG_AlarmOnOff, //1
    CFG_SpeakerOnOff,
    CFG_IdleDisplayMode,
    CFG_BackLightTimeoutSeconds,
    CFG_IdleTitleDisplayMode,
    CFG_AlarmCPMValueHiByte, //6
    CFG_AlarmCPMValueLoByte,
    CFG_CalibrationCPMHiByte_0,
    CFG_CalibrationCPMLoByte_0,
    CFG_CalibrationuSvUcByte3_0,
    CFG_CalibrationuSvUcByte2_0, //11
    CFG_CalibrationuSvUcByte1_0,
    CFG_CalibrationuSvUcByte0_0,
    CFG_CalibrationCPMHiByte_1,
    CFG_CalibrationCPMLoByte_1, //15
    CFG_CalibrationuSvUcByte3_1,
    CFG_CalibrationuSvUcByte2_1,
    CFG_CalibrationuSvUcByte1_1,
    CFG_CalibrationuSvUcByte0_1,
    CFG_CalibrationCPMHiByte_2, //20
    CFG_CalibrationCPMLoByte_2,
    CFG_CalibrationuSvUcByte3_2,
    CFG_CalibrationuSvUcByte2_2,
    CFG_CalibrationuSvUcByte1_2,
    CFG_CalibrationuSvUcByte0_2, //25
    CFG_IdleTextState,
    CFG_AlarmValueuSvByte3,
    CFG_AlarmValueuSvByte2,
    CFG_AlarmValueuSvByte1,
    CFG_AlarmValueuSvByte0, //30
    CFG_AlarmType,
    CFG_SaveDataType,
    CFG_SwivelDisplay,
    CFG_ZoomByte3,
    CFG_ZoomByte2, //35
    CFG_ZoomByte1,
    CFG_ZoomByte0,
    CFG_SPI_DataSaveAddress2,
    CFG_SPI_DataSaveAddress1,
    CFG_SPI_DataSaveAddress0, //40
    CFG_SPI_DataReadAddress2,
    CFG_SPI_DataReadAddress1,
    CFG_SPI_DataReadAddress0,
    CFG_nPowerSavingMode,
    Reserved_1, //45
    Reserved_2,
    Reserved_3,
    CFG_nDisplayContrast,
    CFG_MAX_CPM_HIBYTE,
    CFG_MAX_CPM_LOBYTE, //50
    Reserved_4,
    CFG_nLargeFontMode,
    CFG_nLCDBackLightLevel,
    CFG_nReverseDisplayMode,
    CFG_nMotionDetect, //55
    CFG_bBatteryType,
    CFG_nBaudRate,
    Reserved_5,
    CFG_nGraphicDrawingMode,
    CFG_nLEDOnOff, //60
    Reserved_6,
    CFG_nSaveThresholdValueuSv_m_nCPM_HIBYTE,
    CFG_nSaveThresholdValueuSv_m_nCPM_LOBYTE,
    CFG_nSaveThresholdMode,
    CFG_nSaveThresholdValue3, //65
    CFG_nSaveThresholdValue2,
    CFG_nSaveThresholdValue1,
    CFG_nSaveThresholdValue0,

# some numbers incorrect, see below
    CFG_SSID_0, //69
    //...
    CFG_SSID_31 = CFG_SSID_0 + 31, //68 + 31
    CFG_Password_0, //100
    //...
    CFG_Password_31 = CFG_Password_0 + 31, //100 + 31
    CFG_Website_0, //132
    //....
    CFG_Website_31 = CFG_Website_0 + 31, //132 + 31
    CFG_URL_0, //163
    //....
    CFG_URL_31 = CFG_URL_0 + 31, //163 + 31
    CFG_UserID_0, //195
    //...........
    CFG_UserID_31 = CFG_UserID_0 + 31, //195+31
    CFG_CounterID_0, //227
    //....
    CFG_CounterID_31 = CFG_CounterID_0 + 31, //227 + 31
    CFG_Period, //259
    CFG_WIFIONOFF, //260
    CFG_TEXT_STATUS_MODE,
    /
    CFG_Save_DateTimeStamp, //this one uses 6 byte space
    CFG_MaximumCFGBytes,
}EEPROMDATAT;



################# update
http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=4948 Reply 17 has correction:

CFG_nSaveThresholdValue3, //65
CFG_nSaveThresholdValue2,
CFG_nSaveThresholdValue1,
CFG_nSaveThresholdValue0,

CFG_SSID_0, // 69
//...
CFG_SSID_31 = CFG_SSID_0 + 31, //69 + 31

CFG_Password_0, //101
//...
CFG_Password_31 = CFG_Password_0 + 31, //101 + 31

CFG_Website_0, //133
//....
CFG_Website_31 = CFG_Website_0 + 31, //133 + 31

CFG_URL_0, //165
//....
CFG_URL_31 = CFG_URL_0 + 31, //165 + 31

CFG_UserID_0, //197
//...........
CFG_UserID_31 = CFG_UserID_0 + 31, //197+31

CFG_CounterID_0, //229
//....
CFG_CounterID_31 = CFG_CounterID_0 + 31, //229 + 31

CFG_Period, //261
CFG_WIFIONOFF, //262
CFG_TEXT_STATUS_MODE,           //# see below: CFG_TEXT_STATUS_MODE is for displaying the "normal/medium/high" text in the large font mode.


/
CFG_Save_DateTimeStamp, //this one uses 6 byte space
CFG_MaximumCFGBytes,
################# end update




ZLM: For GMC-500, GMC-600 history data C code structure:
(this should be same as GMC-300, no change)
In history data, it start with 0x55AA00 prefixed for timestamp and followed by the date time
data. and then always followed by 0x55AA and one of the bellow data length byte.

typedef enum
{
    YYMMDDHHMMSS, // Time Stamp
    DOUBLEBYTE_DATA, //the data are double bytes
    THREEBYTE_DATA, //the data are three bytes
    FOURBYTE_DATA, //the data are four bytes
    LOCATION_DATA, //the data is a text string,the first byte data is the length of the text, fol-
    lowed by the text
    TOTAL_EEPROM_SAVE_TYPE
}HistoryDataFormatMarkingT;


Also, the 0x55AA also can follow a one of following history data type:
typedef enum
{
    SAVEOFF,
    SECONDLY,               //must be save value with TOTAL_EEPROM_SAVE_TYPE
    MINUTETLY,              //must be save value with TOTAL_EEPROM_SAVE_TYPE
    HOURLY,                 //must be save value with TOTAL_EEPROM_SAVE_TYPE
    SaveByThresholdSecond,  //only save the data if exceed the preset threshold value
    SaveByThresholdMinute,  //only save the data if exceed the preset threshold value
    TotalSavedType
}SaveDataTypeT;



Copied from gdev_gmc.py:

    """
    The meaning is: (from: http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=4447)

    CFG data Offset table. Start from 0
    '*' in left column = read and/or set by GeigerLog
    ==========================================
*   PowerOnOff, //to check if the power is turned on/off intended
*   AlarmOnOff, //1
*   SpeakerOnOff,
    GraphicModeOnOff,
    BackLightTimeoutSeconds,
    IdleTitleDisplayMode,
    AlarmCPMValueHiByte, //6
    AlarmCPMValueLoByte,
*   CalibrationCPMHiByte_0,
*   CalibrationCPMLoByte_0,
*   CalibrationuSvUcByte3_0,
*   CalibrationuSvUcByte2_0, //11
*   CalibrationuSvUcByte1_0,
*   CalibrationuSvUcByte0_0,
*   CalibrationCPMHiByte_1,
*   CalibrationCPMLoByte_1, //15
*   CalibrationuSvUcByte3_1,
*   CalibrationuSvUcByte2_1,
*   CalibrationuSvUcByte1_1,
*   CalibrationuSvUcByte0_1,
*   CalibrationCPMHiByte_2, //20
*   CalibrationCPMLoByte_2,
*   CalibrationuSvUcByte3_2,
*   CalibrationuSvUcByte2_2,
*   CalibrationuSvUcByte1_2,
*   CalibrationuSvUcByte0_2, //25
    IdleDisplayMode,
    AlarmValueuSvByte3,
    AlarmValueuSvByte2,
    AlarmValueuSvByte1,
    AlarmValueuSvByte0, //30
    AlarmType,
*   SaveDataType,
    SwivelDisplay,
    ZoomByte3,
    ZoomByte2, //35
    ZoomByte1,
    ZoomByte0,
    SPI_DataSaveAddress2,
    SPI_DataSaveAddress1,
    SPI_DataSaveAddress0, //40
    SPI_DataReadAddress2,
    SPI_DataReadAddress1,
    SPI_DataReadAddress0,
*   PowerSavingMode,
    Reserved, //45
    Reserved,
    Reserved,
    DisplayContrast,
*   MAX_CPM_HIBYTE,
*   MAX_CPM_LOBYTE, //50
    Reserved,
    LargeFontMode,
    LCDBackLightLevel,
    ReverseDisplayMode,
    MotionDetect, //55

    # http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=5278, Reply #47
    # bBatteryType: 1 is non rechargeable. 0 is chargeable.
    bBatteryType,
*   BaudRate,
    Reserved,
    GraphicDrawingMode,
    LEDOnOff,
    Reserved,
    SaveThresholdValueuSv_m_nCPM_HIBYTE,
    SaveThresholdValueuSv_m_nCPM_LOBYTE,
    SaveThresholdMode,
    SaveThresholdValue3,        # 65 by my count
    SaveThresholdValue2,
    SaveThresholdValue1,
    SaveThresholdValue0,
    Save_DateTimeStamp, //this one uses 6 byte space  # 69 by my count
    !!! but in the GMC-300E this is at #62 !!!

    # from: http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=4948 Reply #17
    CFG_nSaveThresholdValue3, //65
    CFG_nSaveThresholdValue2,
    CFG_nSaveThresholdValue1,
    CFG_nSaveThresholdValue0,

    CFG_SSID_0, // 69
    //...
    CFG_SSID_31 = CFG_SSID_0 + 31, //69 + 31

    CFG_Password_0, //101
    //...
    CFG_Password_31 = CFG_Password_0 + 31, //101 + 31

    CFG_Website_0, //133
    //....
    CFG_Website_31 = CFG_Website_0 + 31, //133 + 31

    CFG_URL_0, //165
    //....
    CFG_URL_31 = CFG_URL_0 + 31, //165 + 31

    CFG_UserID_0, //197
    //...........
    CFG_UserID_31 = CFG_UserID_0 + 31, //197+31

    CFG_CounterID_0, //229
    //....
    CFG_CounterID_31 = CFG_CounterID_0 + 31, //229 + 31

    CFG_Period, //261
    CFG_WIFIONOFF, //262
    CFG_TEXT_STATUS_MODE,

    Meaning of the values:
        PowerOnOff byte:
        300 series        : 0 for ON and 255 for OFF
        500 and 600 series: 0 for ON and   1 for OFF # strange, but EmfDev in :
        http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=4948  Reply #14

        CFG_TEXT_STATUS_MODE is for displaying the "normal/medium/high" text in the large font mode.
        0 - "Off" - not displayed
        1 - "On" - black text and white background
        2 - "Inverted" - White text and black background

        calibration data:
        300 series:     little-endian
        500/600 series: big-endian

    from: http://www.gmcmap.com/tutorial.asp
        *The Wifi feature is only available on models GMC 320+ V5, GMC 500, GMC 500+, GMC 600, GMC 600+ or later.
        **If you are using a GMC-600 or GMC-600+, after factory reset, please go to Wifi, Reset Wifi Module, press YES.
        -->??? is 320+ using a 256 or 512 bytes config???
    """


Reverse eng:
Fast estimate Byte is at Byte Index= 328
3= dynamic
5, 10, 15, 20, 30, 60 = sec
